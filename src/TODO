---------------------------------------------------------------------------------
TODO

---------------------------------------------------------------------------------
DONE

remove drop_copper
change all copper drops to items that get picked up
change DropEntity component to use a member function instead of a drop table enum
change mod copper drop spell back to modifying the chance of drop, not the amount
change use charges to pick the lowest charges when there are multiple use spells on same item
spawn keys and chests far apart
remove walls at stairs location
make half of the keys be dropped by enemies

---------------------------------------------------------------------------------
PROBLEMS

haxegon's old starling version has Uint,Int error in VertexData.set_numVertices()
openfl release has an error in compress/uncompress for flash (github.com/openfl/starling/issues/117)

fix version not showing

---------------------------------------------------------------------------------
IDEAS

boss mobs
    guaranteed powerful item drop
    big health pool
    low chase distance so that player can choose when to engage

boss summon rituals
    doing some sequence of actions summons a special boss
    copying a copy scroll spawns copy scroll boss
    spawning 3 times on same floor spawns a necromancer at stairs
    killing 2 merchants spawns a merchant boss

improve locked things
    for doors, just locking a single room with item is the same as a locked chest
        need to figure out how to lock a section of the map and place a key on the side reachable by player

redistribute spells between items and equipment

diversify spells more
    lots of spell variations aren't in

improve messages for spell effects

maybe remove ranged enemies
    combat with them is too awkward

max health thing NEEDS to be dealt with
    currently accidentaly swapping between armor with +max health decreases your hp

some spell weight system is definitely needed, especially for constant buffs
    something like a function which returns the equivalent weapon damage for a spell type + spell value
        so a Chain Spell EveryAttack value=1 could be equivalent to 1.5 weapon damage
    then subtract combined spell weights from actual weapon damage and round or ceil

    so that if a weapon at some level X usually has 5 damage and it gets a chain spell, now it's damage is 4

    not sure how to adjust for stuff like summon spells, but they could be just a small number like 0.1-0.3 so that in combination with many other spells they decrease damage

    same thing is possible for negative spells so that now this stuff can be less hard-coded
        start with no damage and some damage "budget", do a random amount of positives which consumes some of the budget, then do a random amount of negatives which increases the budget back up, finally translate what's left into damage

        negatives shouldn't happen all the time of course   
            make some chance value for them occuring at all

    ok that some spells are not factored into this
        stuff like teleports or other more utility spell types can just be 0 weight


